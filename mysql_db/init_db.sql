-- MySQL Script generated by MySQL Workbench
-- Sat Jul 29 18:20:18 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema movies_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema movies_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `movies_db` ;
USE `movies_db` ;

-- -----------------------------------------------------
-- Table `movies_db`.`directors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`directors` (
  `director_id` INT NOT NULL,
  `director_name` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`director_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`languages` (
  `language_short` VARCHAR(2) NOT NULL,
  `language` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`language_short`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`statuses` (
  `status_id` INT NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies` (
  `movie_id` INT NOT NULL,
  `title` VARCHAR(250) NOT NULL,
  `homepage` VARCHAR(250) NULL,
  `budget` INT NULL,
  `popularity` DECIMAL(18,6) NULL,
  `release_date` DATE NULL,
  `director_id` INT NULL,
  `revenue` BIGINT NULL,
  `runtime` INT NULL,
  `vote_average` DECIMAL(18,1) NULL,
  `vote_count` INT NULL,
  `tagline` VARCHAR(1000) NULL,
  `original_language_short` VARCHAR(2) NULL,
  `overview` VARCHAR(4000) NULL,
  `status_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`),
  INDEX `fk_movies_1_idx` (`director_id` ASC) VISIBLE,
  INDEX `fk_original_language_idx` (`original_language_short` ASC) VISIBLE,
  INDEX `fk_status_idx` (`status_id` ASC) VISIBLE,
  CONSTRAINT `fk_director`
    FOREIGN KEY (`director_id`)
    REFERENCES `movies_db`.`directors` (`director_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_original_language`
    FOREIGN KEY (`original_language_short`)
    REFERENCES `movies_db`.`languages` (`language_short`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_status`
    FOREIGN KEY (`status_id`)
    REFERENCES `movies_db`.`statuses` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`genres` (
  `genre_id` INT NOT NULL,
  `genre` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`crew`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`crew` (
  `crew_member_id` INT NOT NULL,
  `name` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`crew_member_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies_genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies_genres` (
  `movie_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  INDEX `fk_genre_idx` (`genre_id` ASC) VISIBLE,
  INDEX `fk_movie_idx` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_genre`
    FOREIGN KEY (`genre_id`)
    REFERENCES `movies_db`.`genres` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_1`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movies_db`.`movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`production_companies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`production_companies` (
  `production_company_id` INT NOT NULL,
  `production_company` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`production_company_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies_production_companies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies_production_companies` (
  `movie_id` INT NOT NULL,
  `production_company_id` INT NOT NULL,
  INDEX `fk_movie_idx` (`movie_id` ASC) VISIBLE,
  INDEX `fk_production_company_idx` (`production_company_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_2`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movies_db`.`movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_production_company`
    FOREIGN KEY (`production_company_id`)
    REFERENCES `movies_db`.`production_companies` (`production_company_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`production_countires`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`production_countires` (
  `production_country_id` INT NOT NULL,
  `production_country` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`production_country_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies_production_countries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies_production_countries` (
  `movie_id` INT NOT NULL,
  `production_country_id` INT NOT NULL,
  INDEX `fk_movie_idx` (`movie_id` ASC) VISIBLE,
  INDEX `fk_production_country_idx` (`production_country_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_3`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movies_db`.`movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_production_country`
    FOREIGN KEY (`production_country_id`)
    REFERENCES `movies_db`.`production_countires` (`production_country_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`departments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`departments` (
  `department_id` INT NOT NULL,
  `department_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`department_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`jobs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`jobs` (
  `job_id` INT NOT NULL,
  `job` VARCHAR(45) NOT NULL,
  `department_id` INT NOT NULL,
  PRIMARY KEY (`job_id`),
  INDEX `fk_jobs_1_idx` (`department_id` ASC) VISIBLE,
  CONSTRAINT `fk_department_id`
    FOREIGN KEY (`department_id`)
    REFERENCES `movies_db`.`departments` (`department_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`crew_jobs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`crew_jobs` (
  `crew_member_id` INT NOT NULL,
  `job_id` INT NOT NULL,
  INDEX `fk_crew_jobs_1_idx` (`job_id` ASC) VISIBLE,
  INDEX `fk_crew_jobs_2_idx` (`crew_member_id` ASC) VISIBLE,
  CONSTRAINT `fk_crew_job_id`
    FOREIGN KEY (`job_id`)
    REFERENCES `movies_db`.`jobs` (`job_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_crewmember_id`
    FOREIGN KEY (`crew_member_id`)
    REFERENCES `movies_db`.`crew` (`crew_member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies_crew`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies_crew` (
  `movie_id` INT NOT NULL,
  `crew_member_id` INT NOT NULL,
  INDEX `fk_movies_crew_1_idx` (`crew_member_id` ASC) VISIBLE,
  INDEX `fk_movies_crew_1_idx1` (`movie_id` ASC) VISIBLE,
  CONSTRAINT `fk_crew_member_id`
    FOREIGN KEY (`crew_member_id`)
    REFERENCES `movies_db`.`crew` (`crew_member_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_4`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movies_db`.`movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies_spoken_languages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies_spoken_languages` (
  `movie_id` INT NOT NULL,
  `spoken_language_short` VARCHAR(2) NOT NULL,
  INDEX `fk_movie_id_idx` (`movie_id` ASC) VISIBLE,
  INDEX `fk_movies_spoken_languages_1_idx` (`spoken_language_short` ASC) VISIBLE,
  CONSTRAINT `fk_movie_5`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movies_db`.`movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_spoken_language_short`
    FOREIGN KEY (`spoken_language_short`)
    REFERENCES `movies_db`.`languages` (`language_short`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`actors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`actors` (
  `actor_id` INT NOT NULL,
  `actor` VARCHAR(250) NOT NULL,
  PRIMARY KEY (`actor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `movies_db`.`movies_actors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `movies_db`.`movies_actors` (
  `movie_id` INT NOT NULL,
  `actor_id` INT NOT NULL,
  INDEX `fk_movie_idx` (`movie_id` ASC) VISIBLE,
  INDEX `fk_actor_id_idx` (`actor_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_6`
    FOREIGN KEY (`movie_id`)
    REFERENCES `movies_db`.`movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_actor_id`
    FOREIGN KEY (`actor_id`)
    REFERENCES `movies_db`.`actors` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;